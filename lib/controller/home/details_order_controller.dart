import 'dart:async';import 'package:dilevery_app/core/class/crud.dart';import 'package:dilevery_app/core/constant/AppLink.dart';import 'package:dilevery_app/core/functions/printing.dart';import 'package:dilevery_app/core/functions/status_request.dart';import 'package:dilevery_app/core/model/ItemModel.dart';import 'package:dilevery_app/core/model/address_model.dart';import 'package:dilevery_app/core/model/order_model.dart';import 'package:dilevery_app/data/data_source/remote_data/home/details_order.dart';import 'package:flutter/cupertino.dart';import 'package:get/get.dart';import 'package:google_maps_flutter/google_maps_flutter.dart';class DetailsOrderController extends GetxController {  OrderModel? order;  List<ItemModel> items = [];  AddressModel? address;  StatusRequest? statusRequest;  DetailsOrderData detailsOrderData = DetailsOrderData(Crud());  String? address_id;  String? lat;  String? long;  final Completer<GoogleMapController> controller =      Completer<GoogleMapController>();  CameraPosition? kGooglePlex;  Set<Marker> myMarker = {};///////////////////  get_details(String items_id) async {    statusRequest = StatusRequest.loading;    update();    try {      await detailsOrderData          .get_details_orders(items_id, address_id!)          .then((val) {        val['data']['items'].forEach((element) {          items.add(ItemModel.fromJson(element[0]));        });        address = AddressModel.fromJson(val['data']['address'][0]);        lat = address!.addressLat.toString();        long = address!.addressLong.toString();        get_location(double.parse(lat!), double.parse(long!));        statusRequest = StatusRequest.success;        update();      });    } catch (e) {      space_print(e);      Get.snackbar('Error during get details', '');      statusRequest = StatusRequest.failure;      update();    }  }  // Future<void> _goToTheLake() async {  //   final GoogleMapController controller = await controller.future;  //   controller.animateCamera(CameraUpdate.newCameraPosition());  // }  get_location(double _lat, double _long) async {    kGooglePlex = CameraPosition(      target: LatLng(_lat, _long),      zoom: 14.4746,    );    myMarker.add(      Marker(        markerId: MarkerId(order!.orderId.toString()), // معرف فريد للعلامة        position: LatLng(double.parse(lat!),double.parse(long!)), // الإحداثيات الجغرافية للعلامة        infoWindow: InfoWindow(          title: 'Order ${order!.orderId} Location', // عنوان العلامة          snippet: 'user : ${order!.orderUserId}', // نص إضافي للعلامة (اختياري)        ),        // يمكنك إضافة خصائص إضافية للعلامة حسب الحاجة      ),    );    update();  }  @override  void onInit() {    // TODO: implement onInit    order = Get.arguments['order'];    address_id = order!.orderAddressId.toString();    get_details(order!.orderProductId!);    update();    super.onInit();  }}