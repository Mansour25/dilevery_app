import 'package:dilevery_app/controller/home/aceepted_controller.dart';import 'package:dilevery_app/core/class/crud.dart';import 'package:dilevery_app/core/functions/printing.dart';import 'package:dilevery_app/core/functions/status_request.dart';import 'package:dilevery_app/core/model/order_model.dart';import 'package:dilevery_app/core/services/shared_pred.dart';import 'package:dilevery_app/data/data_source/remote_data/home/approve_orders.dart';import 'package:dilevery_app/data/data_source/remote_data/home/approve_orders.dart';import 'package:dilevery_app/data/data_source/remote_data/home/approve_orders.dart';import 'package:dilevery_app/data/data_source/remote_data/home/pending_orders.dart';import 'package:get/get.dart';class Orders_controller extends GetxController {  OrdersPendingData ordersData = OrdersPendingData(Crud());  ApproveOrdersData approveOrdersData = ApproveOrdersData(Crud());  List<OrderModel> orders_pending_list = [];  StatusRequest? statusRequest;  get_orders_pending() async {    statusRequest = StatusRequest.loading;    update();    try {      await ordersData.get_pending_orders().then((val) {        if (val['status'] == 'success') {          orders_pending_list.clear();          val['data'].forEach((element) {            orders_pending_list.add(OrderModel.fromJson(element));          });          statusRequest = StatusRequest.success;          update();        }        if (val == StatusRequest.failure || val['status'] == 'failure') {          statusRequest = StatusRequest.failure;          update();        }      });    } catch (e) {      Get.snackbar('Error', 'error during get orders');    }  }  String? delivery_id;  approve_order(String order_id, String user_id) async {    statusRequest = StatusRequest.loading;    update();    await approveOrdersData        .approve_order(order_id, delivery_id!, user_id)        .then((val) {      get_orders_pending();      AcceptedController acceptedController = Get.put(AcceptedController());      acceptedController.get_orders_accepted();      statusRequest = StatusRequest.success;      update();    });  }  @override  void onInit() async {    // TODO: implement onInit await get_orders_pending();    delivery_id = Shared_pref.sharedPreferences!.getString('delivery_id');    get_orders_pending();    super.onInit();  }}