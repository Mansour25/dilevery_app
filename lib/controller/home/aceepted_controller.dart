import 'package:dilevery_app/core/class/crud.dart';import 'package:dilevery_app/core/constant/constant_data.dart';import 'package:dilevery_app/core/constant/name_route.dart';import 'package:dilevery_app/core/functions/printing.dart';import 'package:dilevery_app/core/functions/status_request.dart';import 'package:dilevery_app/core/model/order_model.dart';import 'package:dilevery_app/core/services/shared_pred.dart';import 'package:dilevery_app/data/data_source/remote_data/home/accepted_orders.dart';import 'package:dilevery_app/data/data_source/remote_data/home/done_order.dart';import 'package:get/get.dart';class AcceptedController extends GetxController {  AcceptedOrdersData acceptedOrdersData = AcceptedOrdersData(Crud());  List accepted_orders = [];  StatusRequest? statusRequest;  get_orders_accepted() async {    statusRequest = StatusRequest.loading;    update();    try {      await acceptedOrdersData.accepted_orders(delivery_id).then((val) {        space_print(val);        if (val == StatusRequest.failure || val['status'] == 'failure') {          statusRequest = StatusRequest.failure;          update();        }        if (val['status'] == 'success') {          accepted_orders.clear();          val['data'].forEach((element) {            accepted_orders.add(OrderModel.fromJson(element));          });          statusRequest = StatusRequest.success;          update();        }      });    } catch (e) {      space_print(e);      Get.snackbar('Error In Get Accepted Orders', '');    }  }  DoneOrderDelivered doneOrderDelivered = DoneOrderDelivered(Crud());  done(order_id, user_id) async {    print(' step 1 ');    statusRequest = StatusRequest.loading;    update();    print(' step 2 ');    // try {    await doneOrderDelivered.done_order_delivered(        order_id, user_id, delivery_id);    print(' step 3 ');    statusRequest = StatusRequest.success;    // } catch (e) {    //   statusRequest = StatusRequest.failure;    //   space_print(e);    //   Get.snackbar('Error in done delivered', '');    // }    update();  }  go_to_details(order) {    Get.toNamed(AppRouteName.details, arguments: {      'order': order,    });  }  @override  void onInit() async {    await get_orders_accepted();    update();    super.onInit();  }}