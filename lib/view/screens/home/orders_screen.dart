import 'package:dilevery_app/controller/home/orders_controller.dart';import 'package:dilevery_app/core/constant/name_route.dart';import 'package:dilevery_app/core/functions/status_request.dart';import 'package:dilevery_app/core/model/order_model.dart';import 'package:dilevery_app/view/widget/home/order_card_view.dart';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:get/get.dart';import 'package:google_fonts/google_fonts.dart';import 'package:jiffy/jiffy.dart';class Orders_pending_screen extends StatelessWidget {  const Orders_pending_screen({Key? key}) : super(key: key);  @override  Widget build(BuildContext context) {    Get.put(Orders_controller());    return GetBuilder<Orders_controller>(builder: (logic) {      if (logic.statusRequest == StatusRequest.success) {        return Container(          height: double.infinity,          width: double.infinity,          margin: EdgeInsets.symmetric(            horizontal: 20,            vertical: 10,          ),          child: ListView.separated(            itemBuilder: (context, index) {              OrderModel order = logic.orders_pending_list[index];              return OrderCardView(                accept_done_function: ()async{                   await logic.approve_order(order.orderId.toString(),                        order.orderUserId.toString());                },                details_funtion: (){                    Get.toNamed(AppRouteName.details,arguments: {                      'order':order,                    });                },                in_pending: true,                order: order,              );            },            separatorBuilder: (context, index) {              return Padding(                padding: const EdgeInsets.symmetric(                  vertical: 10,                ),                child: Divider(                  indent: 50,                  endIndent: 50,                  height: 1,                  // padding: EdgeInsets.symmetric(horizontal: 200),                  color: Colors.black,                ),              );            },            itemCount: logic.orders_pending_list.length,          ),        );      }      if (logic.statusRequest == StatusRequest.loading) {        return Center(          child: CircularProgressIndicator(),        );      }      if (logic.statusRequest == StatusRequest.failure ||          logic.orders_pending_list.isEmpty) {        return Center(          child: Text(            'There are no approved orders ..',            style: TextStyle(fontSize: 20),          ),        );      }      return Center(        child: Text(          'There is an unknown error, try again later',          style: TextStyle(fontSize: 25),        ),      );    });  }}