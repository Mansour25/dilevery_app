import 'package:dilevery_app/controller/home/aceepted_controller.dart';import 'package:dilevery_app/core/constant/name_route.dart';import 'package:dilevery_app/core/functions/status_request.dart';import 'package:dilevery_app/core/model/order_model.dart';import 'package:dilevery_app/view/widget/home/order_card_view.dart';import 'package:flutter/material.dart';import 'package:get/get.dart';class AcceptedOrders extends StatelessWidget {  const AcceptedOrders({Key? key}) : super(key: key);  @override  Widget build(BuildContext context) {    Get.lazyPut(()=>AcceptedController());    return GetBuilder<AcceptedController>(builder: (logic) {      if (logic.accepted_orders.isNotEmpty &&          logic.statusRequest == StatusRequest.success) {        return Container(          height: double.infinity,          width: double.infinity,          margin: EdgeInsets.symmetric(            horizontal: 20,            vertical: 10,          ),          child: ListView.separated(            physics: BouncingScrollPhysics(),            itemBuilder: (context, index) {              OrderModel order = logic.accepted_orders[index];              return OrderCardView(                accept_done_function: () async {               await   logic.done(order.orderId, order.orderUserId);                },                details_funtion: () {                  Get.toNamed(AppRouteName.details, arguments: {                    'order': order,                  });                },                in_pending: false,                order: order,              );            },            separatorBuilder: (context, index) {              return Padding(                padding: const EdgeInsets.symmetric(                  vertical: 10,                ),                child: Divider(                  indent: 50,                  endIndent: 50,                  height: 1,                  // padding: EdgeInsets.symmetric(horizontal: 200),                  color: Colors.black,                ),              );            },            itemCount: logic.accepted_orders.length,          ),        );      }      if (logic.statusRequest == StatusRequest.loading) {        return Center(          child: CircularProgressIndicator(),        );      }      if (logic.statusRequest == StatusRequest.failure ||          logic.accepted_orders.isEmpty) {        return Center(          child: Text(            'There are no approved orders ..',            style: TextStyle(fontSize: 20),          ),        );      }      return Container(        color: Colors.white,        child: Center(          child: Text(            'There is an unknown error, try again later',            style: TextStyle(fontSize: 25),          ),        ),      );    });  }}